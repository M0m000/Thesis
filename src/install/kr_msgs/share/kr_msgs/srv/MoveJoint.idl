// generated from rosidl_adapter/resource/srv.idl.em
// with input from kr_msgs/srv/motion/MoveJoint.srv
// generated code does not contain a copyright notice


module kr_msgs {
  module srv {
    typedef double double__7[7];
    module MoveJoint_Request_Constants {
      const int8 TT_VEL = 0;
      const int8 TT_TIME = 1;
      const int8 BP_STOP = 0;
      const int8 BP_VIA = 1;
      const int8 BT_ACC = 0;
      const int8 BT_TIME = 1;
      const int8 CH_INT = 0;
      const int8 CH_COM = 1;
    };
    @verbatim (language="comment", text=
      "#####################################################" "\n"
      "               MOVE IN JOINT SPACE                  #" "\n"
      "#####################################################")
    struct MoveJoint_Request {
      @verbatim (language="comment", text=
        " target joint configuration")
      @unit (value="degrees")
      double__7 jsconf;

      @verbatim (language="comment", text=
        " see TRACKING_TYPE")
      int8 ttype;

      @verbatim (language="comment", text=
        " tracking value (in deg/s or seconds)")
      double tvalue;

      @verbatim (language="comment", text=
        " see BLEND_POINT")
      int8 bpoint;

      @verbatim (language="comment", text=
        " see BLEND_TYPE")
      int8 btype;

      @verbatim (language="comment", text=
        " blend value (in deg/s^2 or seconds)")
      double bvalue;

      @verbatim (language="comment", text=
        " synchronization")
      double sync;

      @verbatim (language="comment", text=
        " see CHAINING")
      int8 chaining;
    };
    struct MoveJoint_Response {
      boolean success;
    };
  };
};
